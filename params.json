{"name":"DotNetOpenAuth.FacebookOAuth2","tagline":"DotNetOpenAuth OAuth2 Client for Facebook","body":"DotNetOpenAuth OAuth2 Client for Facebook\r\n======================================\r\n\r\nThis is a slightly improved implementation over the default Facebook client that ships with DNOA as used in MVC4 (VS2012).\r\nIt keeps the provider and sid off of the redirect uri, and puts them in the state parameter where they belong.\r\n\r\nIt also lets you customize the scopes, in case you want access to other Facebook data.  And it doesn't manipulate\r\nthe response fields - so you get back exactly what facebook provided.\r\n\r\nFacebook Reference: http://developers.facebook.com/docs/howtos/login/server-side-login/\r\n\r\n## Setup\r\n\r\n 1. Setup your Facebook App using the [Facebook developer apps site](https://developers.facebook.com/apps).\r\n    Detailed instructions [here](http://ben.onfabrik.com/posts/oauth-providers#facebook)\r\n\r\n 2. Install this library from [NuGet](https://nuget.org/packages/DotNetOpenAuth.FacebookOAuth2), or compile from source and reference.\r\n\r\n 3. Register the client instead of the existing Facebook OpenId client.\r\n\r\n        var client = new FacebookOAuth2Client(\"yourAppId\", \"yourAppSecret\");\r\n        var extraData = new Dictionary<string, object>();\r\n        OAuthWebSecurity.RegisterClient(client, \"Facebook\", extraData);\r\n\r\n## Usage\r\n\r\nJust like any other `OAuthWebSecurity` client, except you need one extra hook:\r\n\r\n        // add this line\r\n        FacebookOAuth2Client.RewriteRequest();\r\n\r\n        // it belongs right before your existing call to\r\n        OAuthWebSecurity.VerifyAuthentication(....)\r\n\r\nThis is needed because Facebook requires that any extra querystring parameters for the\r\nredirect be packed into a single parameter called `state`.  Since `OAuthWebSecurity` needs\r\ntwo parameters, `__provider__` and `__sid__` - we have to rewrite the url.\r\n\r\n**Note:** The `RewriteRequest` method will unpack the `state` parameter and place its contents back into the regular querystring.\r\nSo if you are looking for a state value such as `ReturnUrl`, you will find it has been moved to `Request.QueryString[\"ReturnUrl\"]`.\r\n\r\n\r\n## Disclaimer\r\n\r\nI don't work for Facebook, Microsoft, or DNOA.  This is released under the [MIT](LICENCE.txt) licence.  Do what you want with it.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}